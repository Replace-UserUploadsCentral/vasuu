# Chatbot Configuration
API_KEY="xesdcrfvtgbyhnjnhbygvtfcd"
MODEL="gemini-pro-vision"
MODEL_PROVIDER="Google AI"
PURPOSE="e-commerce"
DOCUMENT_TYPE="custom"
DOCUMENT_CONTENT="On a cool, clear day in late September, I went out for my final cup of tea. There was a place I liked downtown. Yemeni. The girls who worked there wore sleek headscarves printed with bright, abstracted patterns. Sunny spirals that went on for years.\n\nHanding them my last ten dollars, I took my tea out for a walk beneath the elms. Joggers raced their dogs into the evening gloom, in a park-turned-arboretum that I remembered from my college days. Tracing the path back to a familiar bench I slung my backpack down and sat. I poured my tea into a thermos, and the scents of cardamom and cinnamon mixed up with the rich humus of fall.\n\nHours drifted by.\n\nAs night fell, I started counting. Eight o’clock, then nine. I split seconds like I’d once split hairs, when I was young and thought that money mattered, thought that my own, personal attention was the world’s most important thing.\n\nBy ten, I was jumping at the slightest sound. Trees creaked, I tried to remind myself. The homeless had to sleep somewhere. But try as I might, I still scrutinized every face that slouched out of the pallid moonlight.\n\nEventually, I moved to the next bench over. There was a lamp beside it. Moths dashed themselves against facades of flame while I nursed my tea—it was still delightfully hot—and stared down at my knobby calluses. They all seemed so out of place in that jaundiced splash of lamplight.\n\n“You moved!” my demon said.\n\nGlancing up, I saw only the same tired homeless men and scattered, silent drug dealers. The voice had come from everywhere at once, and yet none of them had heard a thing. Their lives simply marched on; they’d die eventually, but not today.\n\n“Sorry,” I said. “Is the exact bench supposed to matter?”\n\nThe only answer that my demon gave me was their laughter, dissipating like so many windblown leaves.\n\nI sat there, holding my tea, letting time drain as I relaxed my muscles. It wasn’t meditation; my brief sojourns into alternative society had taught me you had to pay for that. Rather, it was a trick I’d taught myself while laying bricks. My mind retracted back into my body like the slick mass of a startled snail, and I concentrated on one muscle and then the next, harnessing my frantic heartbeat to my more prosaic aches and pains.\n\nSoon, I heard the tinny sound of music spilling out of someone’s headphones. I checked my phone: it was 11:59. As the day rolled over and died, the screen vibrated with a thousand notifications, scrolling almost too fast for the eye to see. “One day since this memory!” “Two days since this memory!” “Five years since this day!” each little bubble filled up with pictures that no one had ever taken, least of all me, so terminally camera-shy.\n\nI coughed, abruptly choking up. I hurled my phone into the darkness. And just before I stood to leave, a woman jogged out of a bank of sudden fog.\n\n“Mephistopheles,” I whispered.\n\nA pink sports bra and black mesh leggings. Spotless sneakers accented by ostentatious brand names. I’d never seen her, but I knew her instantly. Her mere presence dragged me to my feet and froze me there. She jogged up, and it was only when she stopped in front of me that I noticed the leash hanging empty in her hand.\n\n“It’s Mephy, in this form,” she said. “Hey, Jase. Have you seen my dog?”\n\n“Dog?” I echoed.\n\nShe nodded. “Dad heard that I was going to a park, so he was all, ‘Can you take Cerberus with you?’ And I mean, no. It’s Cerberus. Three heads, and he’s still literally the dumbest dog.”\n\n“I, uh—”\n\nShe blinked, a third eyelid sliding diagonally across her eyes. The world blinked with her. Trees and hedges and the homeless all dissolved, and I was falling, thrown backwards by a touch of her finger.\n\nI slammed into something solid, breath whooshing out of me. There was no lamplight. The park had melted into night, and fog. In the aftermath of her conjuring, Mephistopheles’s eyes glowed the richest, Klimtian gold.\n\n“Stay here,” she said. “I’ll only be a second.”\n\nAnd my demon slipped her headphones on again and jogged off into the abyssal gloom. For a time, her pink top hung against the darkness like a photographic artifact.\n\nI watched until its colors bled and ran.\n\n***\n\nI was in college when I first met Mephistopheles. She presented male, back then. Tall and far too cool, he’d loomed out of the darkness of a decaying bar, eyes glinting with internal laughter as a gaggle of broke twenty-somethings argued high art and low philosophy. I complimented his curling mustache, and the next thing I knew it was last call.\n\nI didn’t sell my soul that night. It was not because of drugs or alcohol. My demon told me once, on a long walk through this very park after the stakes had been made clear, that I had to damn myself of my own free will. Ten years later, it was still the cleanest contract that I’d ever signed.\n\nNow we were here, on the bench where it all started. When I leaned back, I could feel the jagged signatures of our original contract carved into the wood behind me. When Mephistopheles returned, the time would come to settle my end of the deal.\n\nBreath steaming in the frigid air, I allowed myself to drift back through the departing decade. Names and faces swam before me, but so few of them had really mattered. I’d raced through all my passions, afraid to linger any place too long in case the time was wasted, in case the seconds, minutes, hours, days remaining might have been better spent elsewhere.\n\nSomething vibrated inside my pocket and I found my phone again, magically unbroken. Notifications were still streaming in, memories from every day I’d ever lived, and several hundred more I hadn’t. My own face gazed up at me from obscure roadside attractions, from loft apartments filled with abstract art, from cheap hotels on faded beaches, my socks and someone’s sundress spilled across un-level floors.\n\n“Ten years,” I said, tossing my phone into the night.\n\n“Ten years,” she echoed, jogging back out of the fog.\n\n***\n\nMephistopheles had found her dog. I was certain Cerberus must have had some different form, but just then he was a small, three-headed Yorkie, black and white fur peering from a raincoat and tiny boots.\n\n“So,” she said, sitting beside me. She crossed her legs and Cerberus jumped into her lap, his three heads sniffing at me skeptically. “Ten years ago I offered you a gift. You wanted knowledge, right? You had big dreams of becoming…What was it again?”\n\n“An inventor.”\n\nShe snapped her fingers, startling the dog. “That’s right! You know, Faust—the real Faust—wanted the same thing. People had strange ideas about technology back then, but still. I guess I have a type.”\n\nShe giggled, her shoulder bumping against mine. “Dad’s always getting on me to ‘diversify,’ but I think the modern world’s just corrupting him. He sounds more like a finance bro each day.”\n\nA finance bro, I thought bitterly. Claws dug into my thigh as Cerberus pushed himself between us. Teeth snapped; it appeared his heads were arguing, but I couldn’t tell which one was winning.\n\n“You’re allowed to talk, you know,” my demon said. She took my hand, tattooed fingers stifling the shaking in my own, and I watched the ink twine up her wrists. Names appeared and disappeared, auguring the lives she had subsumed beneath her skin.\n\n“This is not a hostile takeover,” she said softly. “This is a partnership. I’m not dragging you to Hell; you chose to go there, willingly. So buck up, OK? Tell me a little bit about yourself. What have you been up to the past ten years? What have you invented, with the knowledge that I gave you?”\n\n“I—,” I began. “I, uh. Not much, Mephistopheles.”\n\n“Mephy.”\n\n“Mephy, yeah. Yeah. Looking back, I guess I haven’t done so much.”\n\nShe turned my hand over, held it in her lap. Lacquered nails picked out my calluses as if she was using them to map the years.\n\n“You know,” I said, “the first time we sat down on this bench, I thought I understood myself. I guess that’s pretty normal for a twenty-something, but I was different. I was certain. All I lacked was the technical know-how, the skills I should’ve learned in school. If I just had that little lever, I thought I’d move the goddamn world. Cure cancer. Put colonies on the moon. In my dreams, I already had.”\n\nMephy flashed a brilliant smile. “I remember. Your confidence was intoxicating.”\n\n“It intoxicated me, too.”\n\nI dragged my free hand through my thinning hair, and listened to the sound of my lost phone throbbing in the distance.\n\n“You want to get to know me? Fine. The first few years astonished me. All those stories about authors and inventors ordering breakfast in some rotten diner, then jotting down their masterpieces on a napkin while they waited? You made them true, for me. I had my first patent before the year was out, and after that it was start-up city. The money just poured in.”\n\nI tried to stand, but my legs failed when my perspective changed. The darkness spun. I felt as if I’d been trapped inside a centrifuge, my soul portioned out into its pieces and exposed for anyone to see.\n\n“There was a problem, though,” I said shakily. “It turns out I’m terrible at judging people. I put my faith in middle-men and financiers, always thinking that the next VC was my way out. One more shot of cash, and I’d get my life off of the ground.\n\n“By twenty-five I was flat broke. My next birthday found me laying bricks.”\n\nMephy laughed. Her fingernails, as sharp as scalpels, had begun to trim my ragged calluses.\n\nBlood flew; I flinched, but it hadn’t come from me. There was a sharp, unearthly howl, then Cerberus was clambering across my stomach to rest his forepaws on my chest. His first and second heads explored my face, but I could only watch, horrified, as their brother hung down limply on the right.\n\nMephy squeezed my hand. “You’ve been a carpenter since then. A house-mover. A glassblower. You spent two weeks stacking cargo onto ships, six months hanging paintings for a fraudulent art gallery. You invented things occasionally, but that was just the background noise of life.”\n\n“You’ve been keeping tabs on me.”\n\nUnzipping her leggings’ thigh pocket, Mephy pulled a phone out and handed it to me. It was my own, drowning beneath another wave of photographs.\n\n“We all have our favorites,” she said. “Besides, who do you think curates all those app notifications? Dad and I are like, the only demons who even own computers.”\n\nShe leaned in, wafting notes of lavender shampoo. “But nevermind all that. Tell me about your ending, Jase. Endings are my favorite part. What have you been up to, since you felt yourself begin to die?”\n\nI went still. I thought about that snail.\n\n“I, uh…”\n\nShe was quiet. She gave me time. Abstract shadows revolved around us, sometimes smearing into Rothko scenes.\n\n“I wander,” I said finally. “I hop trains and hike forgotten trails. I sleep rough when I have to, and I starve until the starving times are through.” I shrugged. “There’s something deeply human about that kind of suffering. With the time that I had left in me, it felt like what I had to do.”\n\nShaking my head, I took a long, hot drink of tea. I offered the last sip to Mephy and she took it, Klimt eyes gleaming.\n\n“That’s good,” she said with obvious relish.\n\n“That was my last ten dollars.”\n\n“Was it worth it?”\n\n“Damnation, or the tea?”\n\n“You pick.”\n\nI paused. Some small piece of me slithered from its shell to take cautious sips of the night, and of my demon’s perfume.\n\n“Yeah,” I said, smiling. “It was. You know, I built that thermos myself. A cup of tea will keep its temperature for a whole day before it even starts to cool, and the flavors will remain in balance. Cardamom and cinnamon, sweet sugar and the warmth of cloves. Close that lid and time will stop. The world could end all around you, but if you started with the proper product, you’d still have a perfect cup of tea.”\n\n“Time stops, hmmm?” Mephy said. “Why, Jase! It almost sounds like you’re afraid of me.”\n\nThen she blinked, and again, the world blinked with her. Soft colors bled in from the edges, and I glimpsed a dim processional of lamplights, marching off between the tangled trees.\n\nIn a moment, we were back on Earth again.\n\n“Huh?” I said intelligently.\n\n“You know, Jase,” Mephy was saying, “you could have made yourself a god. I’ve seen it happen a thousand times before; every generation must have its Rhodes, or Hitler. Even for us demons, the bloodshed gets a little…stale.”\n\nShe held my thermos up, swirling the fragrant lees. “But this? This is new. No soul I’ve ever purchased has tried to live so quietly before. Your presentation’s rather drab—you might think about a few fun patterns—but wow. If this thing’s just as good with iced chais, I’ll take one in every color.”\n\n“Mephy,” I said. “What are you—”\n\nShe pressed a finger to my lips. “Shush, you. It’s only a new lease on life. In ten years, I expect to meet you back exactly here. Bring fun patterns. Maybe dream up a new snack. This form really likes to snack.”\n\nI nodded, stupefied, and Mephy tapped a hot pink nail against our original contract. The jagged names we’d carved into the old bench blackened, burned, and when I was finally able to uncover my eyes I saw them twined about each other like two snakes, surrounded, not by some school-kid heart, but by a perfect pentagram.\n\nShe turned and kissed my cheek. “I’m a demon, Jase. I’m allowed to alter deals. Just keep working on the little things. Don’t you dare touch cancer, but we can compromise on snacks and tea.”\n\nThen she was gone, jogging off into the moonlight with Cerberus behind her. The dog’s third head jerked and gouted blood, painting Rorschach curls over the dark depressions in the ground.\n\nI followed them into the abstraction I’d once called the future, consumed by all the possibilities I hadn’t fit into the last ten years."
EMBEDDING_MODEL="models/embedding-001" # Optional, can be configured later
